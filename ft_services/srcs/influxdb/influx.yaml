apiVersion: v1
kind: Service
metadata:
  name: influx-service
spec:
  selector:
    app: influx
  ports:
    - port: 8086
      targetPort: 8086
      name: influxdb
      protocol: TCP
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-influx
spec:
  storageClassName: ""
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  claimRef:
    namespace: default
    name: influx-pvc
  hostPath:
    path: /pv/influxdbpv
    type: DirectoryOrCreate
---
apiVersion: v1 # creating a volume for mysql
kind: PersistentVolumeClaim
metadata:
  name: influx-pvc
  labels:
    app: influx
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influx
spec:
  selector:
    matchLabels:
      app: influx
  replicas: 1
  template:
    metadata:
      labels:
        app: influx
    spec:
      containers:
      - name: influx
        image: influx_img # tag that we gave to the docker image when we build it
        imagePullPolicy: Never # allow to pull a local docker image
        livenessProbe:
          exec:
            command:
            - /home/script/./liveprobe.sh
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 2
        ports:
        - containerPort: 8086
        volumeMounts:
        - name: influx-pvc # using volume to save datas if pod crashes
          mountPath: /root/.influxdb/
      volumes:
      - name: influx-pvc
        persistentVolumeClaim:
          claimName: influx-pvc

---